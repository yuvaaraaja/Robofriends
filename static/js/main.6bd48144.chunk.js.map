{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/robots.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js"],"names":["Cards","id","name","email","className","src","alt","CardList","robots","map","user","i","Card","key","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","height","children","robotlist","username","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","filteredRobots","filter","robot","toLowerCase","includes","length","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6bd48144.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Cards = ({ id, name,email }) => {\r\n    return (\r\n        <div className = 'tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n            <img src = {`https://robohash.org/${id}?size=200x200`} alt = 'Robot images'></img>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react';\r\nimport Card from \"./Card\";\r\n\r\nconst CardList = ({robots}) => {\r\n    return (\r\n        <div>\r\n            {robots.map((user, i) => {\r\n                return (\r\n                <Card key={user.id} \r\n                id = {user.id} \r\n                name = {user.name} \r\n                email = {user.email}/>)\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className = 'pa2'>\r\n        <input \r\n        className = 'pa3 ba b--green bg-lightest-blue br2'\r\n        type = 'search' \r\n        placeholder = 'search robots'\r\n        onChange = {searchChange}></input>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style = {{ overflowY : 'scroll', height : '450px' }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll;","export const robotlist = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz'\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv'\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net'\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org'\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca'\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info'\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz'\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me'\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io'\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz'\n  }\n];\n","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError : true});\r\n    }\r\n\r\n    render() {\r\n        if(this.state.hasError === true) {\r\n            return <h1>OOPS ! This is not good..</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components//SearchBox';\r\nimport Scroll from '../components//Scroll'\r\nimport './App.css'\r\nimport { robotlist } from '../components/robots'\r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\n\r\nclass App extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            robots : robotlist,\r\n            searchfield : ''\r\n        };\r\n    }\r\n\r\n    // not working as the request to the url https://jsonplaceholder.typicode.com/users \r\n    // is not returning any data\r\n    // componentDidMount() {\r\n    //     // console.log(\"check!\");\r\n    //     fetch('https://jsonplaceholder.typicode.com/users')\r\n    //      .then((response) => response.json())\r\n    //      .then((users) => this.setState({robots: users}))\r\n    // }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState( {searchfield : event.target.value} );\r\n    }\r\n\r\n    render() {\r\n        const {robots,searchfield} = this.state;\r\n        const filteredRobots = robots.filter((robot) => {\r\n            return (robot.name.toLowerCase().includes(searchfield.toLowerCase()));\r\n        })\r\n        if(!robots.length) {\r\n            return (<h1>LOADING</h1>)\r\n        }\r\n        else {\r\n            return (\r\n                <div className = 'tc'>\r\n                    <h1 className = 'f2'>RoboFriends</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange} />\r\n                    <Scroll>\r\n                        <ErrorBoundary>\r\n                            <CardList robots = {filteredRobots}/>\r\n                            </ErrorBoundary>\r\n                    </Scroll>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport 'tachyons';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}